Day1:
-----
QA/Software Tester - Quality Assurance

Testing - End user behaviour

Type of Testing:
----------------
1. Functional Test
- Unit Test
- Integration Test

-- Positive Testing - Functionality available
-- Negative Testing - Functionality not Available
-- Boundary Testing - Edge case Testing

a. Smoke - All Major functional tests - 500 (High Priority Tests)
b. Regression - All the tests - 2000
c. Sanity - 100 When we do not have enough time to run regression, we ran sanaty test
d. Re-Test - 1 test case, where there were bug/defect. Now it is ready to test
UAT - User acceptance Test

2. Non-Functional Test
- Performace Testing
-- Load Test - 1mil + half a million - 100% calls will pass
-- Spike test - 3 mil + 1 mil - 100% + 50%
-- Stress Test - 1.5 mil + half a mil (95%) + half mil (50%)+... = 5mil will break my system (finding breat point of a system)
-- Endurance test - 100% (1.5 mil + 20000), 95%(2 mil + 20000)
-- Volumn Test - 

- UI - looks and feel
- UX - User Experience
- Network Test
- Security Test
- 508 Compilance Test
- Compatibility Testing

SDLC: (Software Development Life Cycle)
=======================================
Methodologies:
--------------
Waterfall - 
Iterative - 
V-Sahpe
Big Bang
Agail - Scrum (Sprint), Kanban (priority borad)

SDLC Sategs:
-------
DEV			| 	QA(STLC-Software Testing Life Cycle)
1. Requirment Analysis  | Requirment Analysis (Time Estimation(Story Points))
2. Design (Wiremock-UI)	| Design Test Plan (Acceptence Criteria, Exit Criteria, In scope, Out of scope)
3. Development		| Develop the scripts/ Write Test Cases
4. Testing (Unit Test)	| SIT (System Integration), Regression/Sanity, Smoke, Re-Test
5. UAT			| Signing of report, Test/Requiremnt Tracability Matrix(RTM) - Test Cases aganinst Requiremnt
6. Deployment/Release

Scrum Activities: (2-3 weeks)
-----------------------------
Backlog - Requiremnets 
Product Backlog - All the requiremnt of the project
Sprint Backlog - Requiremnts for specific Sprint
1. Sprint Grooming - Sprint Backlog
2. Sprint Planning - Story Point (Time Estimation + Complexcity (Fibonacci Sequence/Poker (1, 3, 5, 8)))
3. DSU - Daily Stand up (What you did yesterday, What you are going to do today, is there any issues)
4. Sprint Demo - Demonstration of the work
5. Sprint Review (Optional) - Some requiremnt cannot be done/changes
6. Sprint Retrospective - How the sprint went, is there any issue, what can we make it better
Additional Meetings:
-- Defect Triaging 
-- Test Case/Scripts review

Environments:
-------------
Live/PROD/PRODUCTION - https://www.amazon.com/ (Release)
Dev - https://www.dev-amazon.com/ (blue-fo/E1)
QA/SIT - https://www.qa-amazon.com/ (System Integration Test) (hybb/E2)
UAT - https://www.uat-amazon.com/
Stg - https://www.stg-amazon.com/
DEPLOYMENT - Deploy codes in different environment (DEV -> QA -> UAT -> STG -> PROD)

Automation - Reduce manual effort

Automation Testing Benefits:
----------------------------
ROI - Return of Investment
Framework
Repetitive testing
In longer run it will benefits
It can provides reports and logs
Nightly run
24 hours
1-Click testing
Regression Testing

Before you do Automation: (Project Level - Requirement Face)
------------------------
1. Are you going to use these test in future? - Yes
2. Do you have to time to do automation? - Yes
3. Do you have budget? - Yes
4. Do you have resources? - Skills, Man power, Tools, Time, Budget - Yes

Test Setup:
-----------------------------
1. Which environment we are going to test? - QA Access, GitHub, AD (Active Directory)
2. Type of Tests - Unit Test, Integration Test, Performance Test
3. POC (Proof of Concept) - Demo Framework -> Assurance and Idea
4. Project Test Plan - Tractability, Report, Bug Life Cycle

Framework:
----------
1. Type of testing - Regression suite, Smoke suite, Functional tests
2. Type of Framework - TDD/BDD/DDD/KDD/MDD/LSD
3. Design Pattern of Framework - Behavioral, Creational, Structural ex : Page Object Model, Singleton, Hybrid
4. Design Diagram
5. Reporting


